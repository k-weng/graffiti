{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Meteor.users.deny({\n  update: function () {\n    return true;\n  }\n});\n\n// Meteor.methods({\n// \taddUserMessage: function(username) {\n// \t\tconsole.log(\"addUserMessage is being called\");\n// \t\tvar userExist;\n// \t\tconsole.log(\"doesUserExist is being called by addUserMessage\");\n// \t\tconsole.log(\"The rest of addUserMessage is being called\");\n// \t\tconsole.log(\"The user being added: \" + username);\n// \t\tconsole.log(\"The current user: \" + Meteor.user().username);\n// \t\tvar check = username === Meteor.user().username;\n// \t\tconsole.log(\"The current user is the user being added, true or false: \" + check);\n// \t\tconsole.log(\"The current group's ID is: \" + Groups.find({_id:Router.current().params._id}));\n// \t\tif (!username) message = \"Please fill in an user\";\n// \t\telse if (username === Meteor.user().username) message = \"You are already in the group\";\n// \t\telse if (!(Groups.find({_id: Router.current().params._id, people: {$in: [username]}}) == null)) message = \"User is already in the group\";\n// \t\telse if (!userExist) message = \"User does not exist\";\n// \t\telse message = \"User is added to group\";\n// \t\treturn username;\n// \t}\n// });\n// validateUser = function (username) {\n// \tvar messages = {};\n// \tvar userExist;\n// \tMeteor.call('doesUserExist', username, function (error, result) {\n// \t\tuserExist = result === 1  ? true : false;\n// \t\tconsole.log(result);\n// \t\tconsole.log(userExist);\n// \t});\n// \tconsole.log(userExist);\n// \tconsole.log(Groups.findOne({_id: this._id, people: {$in: [username]}}));\n// \tif (!username) messages.userError = \"Please fill in an user\";\n// \telse if (username === Meteor.user().username) messages.userError = \"You are already in the group\";\n// \telse if (Groups.find({_id: Router.current().params._id, people: {$in: [username]}}) == null) messages.userError = \"User is already in the group\";\n// \telse if (!userExist) messages.userError = \"User does not exist\";\n// \telse messages.userError = \"User is added to group\"\n// \treturn messages;\n// }","ast":null,"map":{"version":3,"sources":["/lib/users.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;AAChB,QAAM,EAAE,YAAW;AACjB,WAAO,IAAI,CAAC;GACb;CACF,CAAC,CAAC","file":"/lib/users.js.map","sourcesContent":["Meteor.users.deny({\n  update: function() {\n    return true;\n  }\n});\n\n// Meteor.methods({\n// \taddUserMessage: function(username) {\n// \t\tconsole.log(\"addUserMessage is being called\");\n// \t\tvar userExist;\n// \t\tconsole.log(\"doesUserExist is being called by addUserMessage\");\n// \t\tconsole.log(\"The rest of addUserMessage is being called\");\n// \t\tconsole.log(\"The user being added: \" + username);\n// \t\tconsole.log(\"The current user: \" + Meteor.user().username);\n// \t\tvar check = username === Meteor.user().username;\n// \t\tconsole.log(\"The current user is the user being added, true or false: \" + check);\n// \t\tconsole.log(\"The current group's ID is: \" + Groups.find({_id:Router.current().params._id}));\n// \t\tif (!username) message = \"Please fill in an user\";\n// \t\telse if (username === Meteor.user().username) message = \"You are already in the group\";\n// \t\telse if (!(Groups.find({_id: Router.current().params._id, people: {$in: [username]}}) == null)) message = \"User is already in the group\";\n// \t\telse if (!userExist) message = \"User does not exist\";\n// \t\telse message = \"User is added to group\";\n// \t\treturn username;\n// \t}\n// });\n// validateUser = function (username) {\n// \tvar messages = {};\n// \tvar userExist;\n// \tMeteor.call('doesUserExist', username, function (error, result) {\n// \t\tuserExist = result === 1  ? true : false;\n// \t\tconsole.log(result);\n// \t\tconsole.log(userExist);\n// \t});\n// \tconsole.log(userExist);\n// \tconsole.log(Groups.findOne({_id: this._id, people: {$in: [username]}}));\n// \tif (!username) messages.userError = \"Please fill in an user\";\n// \telse if (username === Meteor.user().username) messages.userError = \"You are already in the group\";\n// \telse if (Groups.find({_id: Router.current().params._id, people: {$in: [username]}}) == null) messages.userError = \"User is already in the group\";\n// \telse if (!userExist) messages.userError = \"User does not exist\";\n// \telse messages.userError = \"User is added to group\"\n// \treturn messages;\n// }\n"]},"hash":"70362961e087e3f06e18da36e55508c1aaff3d67"}
