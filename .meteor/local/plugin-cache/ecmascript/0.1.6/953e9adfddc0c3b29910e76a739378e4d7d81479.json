{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Router.configure({\n\tlayoutTemplate: 'main',\n\tloadingTemplate: 'loading',\n\tnotFoundTemplate: 'notFound',\n\tyieldTemplates: {\n\t\tnav: { to: 'nav' }\n\t},\n\twaitOn: function () {\n\t\tconsole.log(\"subscribed\");\n\t\treturn [Meteor.subscribe('groups'), Meteor.subscribe('messages')];\n\t}\n});\n\nvar requireLogin = function () {\n\tif (!Meteor.user()) {\n\t\tthis.render(\"loginRequired\");\n\t} else {\n\t\tthis.next();\n\t}\n};\n\n//Router.route('/send',{name: 'messageSend'});\nRouter.map(function () {\n\tthis.route('home', { path: '/' });\n\tthis.route('groupList', { path: '/groups' });\n});\n\nRouter.route('groups/:_id', {\n\tname: 'groupPage',\n\tdata: function () {\n\t\treturn Groups.findOne(this.params._id);\n\t}\n});\n\nvar goToGroups = function (pause) {\n\tif (Meteor.userId()) {\n\t\tRouter.go('groupList');\n\t} else {\n\t\tthis.next();\n\t}\n};\n\nRouter.onBeforeAction(goToGroups, { only: ['home'] });\nRouter.onBeforeAction(function () {\n\t$('body').addClass('body-home');\n\tthis.next();\n});\nRouter.onBeforeAction('dataNotFound', { only: 'groupPage' });\nRouter.onBeforeAction(function () {\n\tvar user = Meteor.user().username;\n\tvar currentGroupId = Router.current().params._id;\n\tif (Groups.find({ _id: currentGroupId, people: { $in: [user] } }).count() === 0) {\n\t\tRouter.go('/');\n\t} else {\n\t\tthis.next();\n\t}\n}, { only: 'groupPage' });\nRouter.onBeforeAction(requireLogin, { only: 'messageSend' });\n\n// Router.plugin('ensureSignedIn', {\n//   only: ['groupPage']\n// });\n\n// AccountsTemplates.configureRoute('enrollAccount');\n// AccountsTemplates.configureRoute('signIn');\n// AccountsTemplates.configureRoute('signUp');","ast":null,"map":{"version":3,"sources":["/lib/router.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,SAAS,CAAC;AAChB,eAAc,EAAE,MAAM;AACtB,gBAAe,EAAE,SAAS;AAC1B,iBAAgB,EAAE,UAAU;AAC5B,eAAc,EAAE;AACT,KAAG,EAAE,EAAC,EAAE,EAAE,KAAK,EAAC;EACnB;AACJ,OAAM,EAAE,YAAU;AACjB,SAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,SAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;EAClE;CACD,CAAC,CAAC;;AAEH,IAAI,YAAY,GAAG,YAAU;AAC5B,KAAG,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC;AACjB,MAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;EAC7B,MAAM;AACN,MAAI,CAAC,IAAI,EAAE,CAAC;EACZ;CACD,CAAA;;;AAGD,MAAM,CAAC,GAAG,CAAC,YAAW;AACpB,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;AAChC,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;CAC5C,CAAC,CAAC;;AAEH,MAAM,CAAC,KAAK,CAAC,aAAa,EAC1B;AACC,KAAI,EAAE,WAAW;AACjB,KAAI,EAAE,YAAW;AAChB,SAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;EACvC;CACD,CAAC,CAAC;;AAEH,IAAI,UAAU,GAAG,UAAS,KAAK,EAAE;AAC/B,KAAI,MAAM,CAAC,MAAM,EAAE,EAAE;AACnB,QAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;EACxB,MAAM;AACL,MAAI,CAAC,IAAI,EAAE,CAAC;EACb;CACF,CAAC;;AAEF,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;AACpD,MAAM,CAAC,cAAc,CAAC,YAAW;AAC3B,EAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAChC,KAAI,CAAC,IAAI,EAAE,CAAC;CACjB,CAAC,CAAC;AACH,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;AAC3D,MAAM,CAAC,cAAc,CAAC,YAAW;AAChC,KAAI,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;AAClC,KAAI,cAAc,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;AAC9C,KAAI,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAC,EAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;AAC5E,QAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACf,MAAM;AACH,MAAI,CAAC,IAAI,EAAE,CAAC;EACf;CACJ,EAAE,EAAC,IAAI,EAAG,WAAW,EAAC,CAAC,CAAC;AACzB,MAAM,CAAC,cAAc,CAAC,YAAY,EAAC,EAAC,IAAI,EAAC,aAAa,EAAC,CAAC,CAAC","file":"/lib/router.js.map","sourcesContent":["Router.configure({\n\tlayoutTemplate: 'main',\n\tloadingTemplate: 'loading',\n\tnotFoundTemplate: 'notFound',\n\tyieldTemplates: {\n        nav: {to: 'nav'}\n    },\n\twaitOn: function(){\n\t\tconsole.log(\"subscribed\");\n\t\treturn [Meteor.subscribe('groups'), Meteor.subscribe('messages')];\n\t}\n});\n\nvar requireLogin = function(){\n\tif(!Meteor.user()){\n\t\tthis.render(\"loginRequired\");\n\t} else {\n\t\tthis.next();\n\t}\n}\n\n//Router.route('/send',{name: 'messageSend'});\nRouter.map(function() {\n  this.route('home', {path: '/'});\n  this.route('groupList', {path: '/groups'});\n});\n\nRouter.route('groups/:_id',\n{\n\tname: 'groupPage',\n\tdata: function() {\n\t\treturn Groups.findOne(this.params._id);\n\t}\n});\n\nvar goToGroups = function(pause) {\n  if (Meteor.userId()) {\n    Router.go('groupList');\n  } else {\n    this.next();\n  }\n};\n\nRouter.onBeforeAction(goToGroups, {only: ['home']});\nRouter.onBeforeAction(function() {\n      $('body').addClass('body-home');\n      this.next();\n});\nRouter.onBeforeAction('dataNotFound', {only: 'groupPage'});\nRouter.onBeforeAction(function() {\n\tvar user = Meteor.user().username;\n\tvar currentGroupId = Router.current().params._id;\n    if (Groups.find({_id: currentGroupId, people: {$in: [user]}}).count() === 0) {\n    \tRouter.go('/');\n    } else {\n        this.next();\n    }\n}, {only : 'groupPage'});\nRouter.onBeforeAction(requireLogin,{only:'messageSend'});\n\n\n\n// Router.plugin('ensureSignedIn', {\n//   only: ['groupPage']\n// });\n\n// AccountsTemplates.configureRoute('enrollAccount');\n// AccountsTemplates.configureRoute('signIn');\n// AccountsTemplates.configureRoute('signUp');\n"]},"hash":"953e9adfddc0c3b29910e76a739378e4d7d81479"}
