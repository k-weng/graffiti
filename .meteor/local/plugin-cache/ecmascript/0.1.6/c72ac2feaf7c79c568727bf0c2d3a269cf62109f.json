{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Router.configure({\n    layoutTemplate: 'layout',\n    loadingTemplate: 'loading',\n    notFoundTemplate: 'notFound',\n    yieldTemplates: {\n        nav: { to: 'nav' }\n    },\n    waitOn: function () {\n        return [Meteor.subscribe('groups'), Meteor.subscribe('messages')];\n        // return [Meteor.subscribe('groups','sprays',-1), Meteor.subscribe('messages')];\n    }\n});\n\n//Router.route('/send',{name: 'messageSend'});\nRouter.map(function () {\n    this.route('home', { path: '/',\n        onBeforeAction: function () {\n            $('body').addClass('home');\n            this.next();\n        },\n\n        onStop: function () {\n            $('body').removeClass('home');\n        }\n    });\n\n    this.route('groupList', { path: '/groups' });\n});\n\nRouter.route('groups/:_id', {\n    name: 'groupPage',\n    data: function () {\n        return Groups.findOne(this.params._id);\n    }\n});\n\nRouter.route('users/:_id', {\n    name: 'userPage',\n    data: function () {\n        return Messages.find({ name: name });\n    }\n});\n\nvar requireLogin = function () {\n    if (!Meteor.user()) {\n        // If user is not logged in render landingpage\n        Router.go('/');\n    } else {\n        //if user is logged in render whatever route was requested\n        this.next();\n    }\n};\n\nvar goToGroups = function (pause) {\n    if (Meteor.userId()) {\n        Router.go('groupList');\n    } else {\n        Router.go('/');\n        this.next();\n    }\n};\n\nRouter.onBeforeAction(function () {\n    $('body').addClass('body-home');\n    this.next();\n});\n\nRouter.onBeforeAction(requireLogin, { except: 'home' });\n\nRouter.onBeforeAction(goToGroups, { only: ['home'] });\n\nRouter.onBeforeAction(function () {\n    var user = Meteor.user().username;\n    var currentGroupId = Router.current().params._id;\n    var notAllowedIn = Groups.find({ _id: currentGroupId, people: { $in: [user] } }).count() === 0;\n    var isPrivate = Groups.find({ _id: currentGroupId, privateGroup: true }) === 1;\n\n    if (notAllowedIn && isPrivate) {\n        Router.go('/');\n    } else {\n        this.next();\n    }\n}, { only: 'groupPage' });\n//Router.onBeforeAction('dataNotFound', {only: 'groupPage'});\n\n// Router.plugin('ensureSignedIn', {\n//   only: ['groupPage']\n// });\n\n// AccountsTemplates.configureRoute('enrollAccount');\n// AccountsTemplates.configureRoute('signIn');\n// AccountsTemplates.configureRoute('signUp');","ast":null,"map":{"version":3,"sources":["/lib/router.js"],"names":[],"mappings":"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","file":"/lib/router.js.map","sourcesContent":["Router.configure({\n    layoutTemplate: 'layout',\n    loadingTemplate: 'loading',\n    notFoundTemplate: 'notFound',\n    yieldTemplates: {\n        nav: {to: 'nav'}\n    },\n\twaitOn: function() {\n        return [Meteor.subscribe('groups'), Meteor.subscribe('messages')];\n\t\t// return [Meteor.subscribe('groups','sprays',-1), Meteor.subscribe('messages')];\n\t}\n});\n\n//Router.route('/send',{name: 'messageSend'});\nRouter.map(function() {\n    this.route('home', {path: '/',\n        onBeforeAction: function() {\n            $('body').addClass('home');\n            this.next();\n        },\n\n        onStop: function() {\n            $('body').removeClass('home');\n        }\n\t});\n  \n    this.route('groupList', {path: '/groups'});\n});\n\nRouter.route('groups/:_id',\n{\n\tname: 'groupPage',\n\tdata: function() {\n\t\treturn Groups.findOne(this.params._id);\n\t}\n});\n\nRouter.route('users/:_id',\n{\n    name: 'userPage',\n    data: function(){\n        return Messages.find({name});\n    }\n});\n\nvar requireLogin = function() { \n\tif (! Meteor.user()) {\n       \t// If user is not logged in render landingpage\n    \tRouter.go('/');\n \t} else {\n        //if user is logged in render whatever route was requested\n   \t\tthis.next(); \n \t}\n}\n\nvar goToGroups = function(pause) {\n  if (Meteor.userId()) {\n    Router.go('groupList');\n  } else {\n  \tRouter.go('/');\n    this.next();\n  }\n};\n\nRouter.onBeforeAction(function() {\n    $('body').addClass('body-home');\n    this.next();\n});\n\nRouter.onBeforeAction(requireLogin, {except: 'home'});\n\nRouter.onBeforeAction(goToGroups, {only: ['home']});\n\nRouter.onBeforeAction(function() {\n    var user = Meteor.user().username;\n\tvar currentGroupId = Router.current().params._id;\n    var notAllowedIn = Groups.find({_id: currentGroupId, people: {$in: [user]}}).count() === 0;\n    var isPrivate = Groups.find({_id: currentGroupId, privateGroup: true}) === 1;\n\n    if (notAllowedIn && isPrivate) {\n  \t Router.go('/');\n    } else {\n        this.next();\n    }\n}, {only : 'groupPage'});\n//Router.onBeforeAction('dataNotFound', {only: 'groupPage'});\n\n\n\n// Router.plugin('ensureSignedIn', {\n//   only: ['groupPage']\n// });\n\n// AccountsTemplates.configureRoute('enrollAccount');\n// AccountsTemplates.configureRoute('signIn');\n// AccountsTemplates.configureRoute('signUp');\n"]},"hash":"c72ac2feaf7c79c568727bf0c2d3a269cf62109f"}
