{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Template.groupList.onCreated(function () {\n\t// debugger\n\tSession.set(\"sort\", \"sprays\");\n\tSession.set(\"order\", -1);\n\tvar self = this;\n\t// debugger\n\tself.autorun(function () {\n\t\t// debugger\n\t\tconsole.log(Session.get(\"sort\"), Session.get(\"order\"));\n\t\tself.subscribe('groups', Session.get(\"sort\"), Session.get(\"order\"));\n\t});\n});\n\nTemplate.groupList.helpers({\n\tsortButton: function () {\n\t\treturn Session.get(\"sort\");\n\t},\n\n\tprivateGroups: function () {\n\t\tvar currentUser = Meteor.user().username;\n\t\tvar s = Session.get(\"sort\");\n\t\tvar o = Session.get(\"order\");\n\t\treturn Groups.find({ people: { $in: [currentUser] }, privateGroup: true }, { sort: { s: o } });\n\t\t// if(s===\"sprays\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{sprays:1}});\n\t\t// }\n\t\t// else if(s===\"name\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{name:-1}});\n\t\t// }else if(s===\"createdBy\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{createdBy:1}});\n\t\t// }\n\t},\n\n\tpublicGroups: function () {\n\t\treturn Groups.find({ privateGroup: false });\n\t}\n});\n\nTemplate.groupList.events({\n\t\"click #sprays\": function (event) {\n\t\tSession.set(\"sort\", \"sprays\");\n\t\tSession.set(\"order\", -1);\n\n\t\tconsole.log(Session.get(\"sort\"));\n\t},\n\t\"click #createdBy\": function (event) {\n\t\tSession.set(\"sort\", \"createdBy\");\n\t\tSession.set(\"order\", 1);\n\n\t\tconsole.log(Session.get(\"sort\"));\n\t},\n\t\"click #name\": function (event) {\n\t\tSession.set(\"sort\", \"name\");\n\t\tSession.set(\"order\", -1);\n\n\t\tconsole.log(Session.get(\"sort\"));\n\t}\n});","ast":null,"map":{"version":3,"sources":["/client/templates/groups/group_list.js"],"names":[],"mappings":"AAAA,QAAQ,CAAC,SAAS,CAAC,SAAS,CAC3B,YAAU;;AAET,QAAO,CAAC,GAAG,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;AAC7B,QAAO,CAAC,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAA;AACvB,KAAI,IAAI,GAAC,IAAI,CAAC;;AAEd,KAAI,CAAC,OAAO,CAAC,YAAU;;AAEtB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACtD,MAAI,CAAC,SAAS,CAAC,QAAQ,EAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;EAClE,CAAC,CAAC;CACH,CACD,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;AAC1B,WAAU,EAAE,YAAU;AACrB,SAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;EAC1B;;AAED,cAAa,EAAE,YAAW;AACzB,MAAI,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC;AACzC,MAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5B,MAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7B,SAAO,MAAM,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,EAAC,GAAG,EAAE,CAAC,WAAW,CAAC,EAAC,EAAE,YAAY,EAAE,IAAI,EAAC,EAAC,EAAC,IAAI,EAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAC,CAAC,CAAC;;;;;;;;;;;;EAYpF;;AAED,aAAY,EAAE,YAAW;AACxB,SAAO,MAAM,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,KAAK,EAAC,CAAC,CAAC;EAC1C;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;AACzB,gBAAe,EAAC,UAAS,KAAK,EAAC;AAC9B,SAAO,CAAC,GAAG,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;AAC7B,SAAO,CAAC,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAA;;AAEvB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;EAChC;AACD,mBAAkB,EAAC,UAAS,KAAK,EAAC;AACjC,SAAO,CAAC,GAAG,CAAC,MAAM,EAAC,WAAW,CAAC,CAAC;AAChC,SAAO,CAAC,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC,CAAA;;AAEtB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;EAChC;AACD,cAAa,EAAC,UAAS,KAAK,EAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC;AAC3B,SAAO,CAAC,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAA;;AAEvB,SAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;EAChC;CACD,CAAC,CAAC","file":"/client/templates/groups/group_list.js.map","sourcesContent":["Template.groupList.onCreated(\n\tfunction(){\n\t\t// debugger\n\t\tSession.set(\"sort\",\"sprays\");\n\t\tSession.set(\"order\",-1)\n\t\tvar self=this;\n\t\t// debugger\n\t\tself.autorun(function(){\n\t\t\t// debugger\n\t\t\tconsole.log(Session.get(\"sort\"),Session.get(\"order\"));\n\t\t\tself.subscribe('groups',Session.get(\"sort\"),Session.get(\"order\"));\n\t\t});\n\t}\n);\n\nTemplate.groupList.helpers({\n\tsortButton: function(){\n\t\treturn Session.get(\"sort\")\n\t},\n\n\tprivateGroups: function() {\n\t\tvar currentUser = Meteor.user().username;\n\t\tvar s = Session.get(\"sort\");\n\t\tvar o = Session.get(\"order\");\n\t\treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{s:o}});\n\t\t// if(s===\"sprays\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{sprays:1}});\n\t\t// }\n\t\t// else if(s===\"name\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{name:-1}});\n\t\t// }else if(s===\"createdBy\"){\n\t\t// \tconsole.log(\"here\")\n\t\t// \treturn Groups.find({people: {$in: [currentUser]}, privateGroup: true},{sort:{createdBy:1}});\n\t\t// }\n\t},\n\n\tpublicGroups: function() {\n\t\treturn Groups.find({privateGroup: false});\n\t}\n});\n\nTemplate.groupList.events({\n\t\"click #sprays\":function(event){\n\t\tSession.set(\"sort\",\"sprays\");\n\t\tSession.set(\"order\",-1)\n\n\t\tconsole.log(Session.get(\"sort\"))\n\t},\n\t\"click #createdBy\":function(event){\n\t\tSession.set(\"sort\",\"createdBy\");\n\t\tSession.set(\"order\",1)\n\n\t\tconsole.log(Session.get(\"sort\"))\n\t},\n\t\"click #name\":function(event){\n\t\tSession.set(\"sort\",\"name\");\n\t\tSession.set(\"order\",-1)\n\n\t\tconsole.log(Session.get(\"sort\"))\n\t}\n});"]},"hash":"ba8e2625e463a9c59333b2017beb6eac867bc0f3"}
