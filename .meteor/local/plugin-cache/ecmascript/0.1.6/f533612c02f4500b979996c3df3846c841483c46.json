{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Template.addUser.events({\n\t'submit .add-user': function (e) {\n\t\te.preventDefault();\n\t\tvar newUser = $(\"#userName\").val();\n\t\te.stopPropagation();\n\t\tvar inGroup = Groups.findOne({ _id: this._id, people: { $in: [newUser] } }) == null;\n\t\tvar groupId = this._id;\n\n\t\tvar message = \"\";\n\t\tvar length = newUser.length > 0;\n\t\tconsole.log(\"The user being added: \" + newUser);\n\t\tconsole.log(\"The current user: \" + Meteor.user().username);\n\t\tvar check = newUser === Meteor.user().username;\n\t\tconsole.log(\"The current user is the user being added, true or false: \" + check);\n\t\tif (!length) message = \"Please fill in an user\";else if (newUser === Meteor.user().username) message = \"You are already in the group\";else if (!inGroup) message = \"User is already in the group\";\n\n\t\tconsole.log(\"Setting session\");\n\t\tSession.set('addUserMessages', message);\n\n\t\tconsole.log(\"Session is set to: \" + Session.get('addUserMessages') + \" .\");\n\n\t\tMeteor.call('doesUserExist', newUser, function (error, result) {\n\t\t\tif (result === 1 && inGroup) {\n\t\t\t\tMeteor.call('addUser', newUser, groupId);\n\t\t\t\tconsole.log(\"New user added\");\n\t\t\t\tconsole.log(Groups.find().fetch());\n\t\t\t} else if (result === 0 && lengths) {\n\t\t\t\tSession.set('addUserMessages', \"User does not exist\");\n\t\t\t}\n\t\t});\n\t}\n});\n\nTemplate.addUser.onCreated(function () {\n\tSession.set('addUserMessages', \"\");\n\tconsole.log(\"On created, session is \" + Session.get('addUserMessages'));\n});\n\nTemplate.addUser.helpers({\n\n\tamessage: function () {\n\t\tconsole.log(\"In message helper, session is \" + Session.get('addUserMessages'));\n\t\treturn Session.get('addUserMessages');\n\t}\n});","ast":null,"map":{"version":3,"sources":["/client/templates/groups/add_user.js"],"names":[],"mappings":"AAAA,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AACvB,mBAAkB,EAAE,UAAS,CAAC,EAAE;AAC/B,GAAC,CAAC,cAAc,EAAE,CAAC;AACnB,MAAI,OAAO,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;AACnC,GAAC,CAAC,eAAe,EAAE,CAAC;AACpB,MAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAC,EAAC,CAAC,IAAI,IAAI,CAAC;AAChF,MAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;;AAEvB,MAAI,OAAO,GAAG,EAAE,CAAC;AACjB,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAChC,SAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,OAAO,CAAC,CAAC;AAChD,SAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC3D,MAAI,KAAK,GAAI,OAAO,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,AAAC,CAAC;AACjD,SAAO,CAAC,GAAG,CAAC,2DAA2D,GAAG,KAAK,CAAC,CAAC;AACjF,MAAI,CAAC,MAAM,EAAE,OAAO,GAAG,wBAAwB,CAAC,KAC3C,IAAI,OAAO,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,GAAG,8BAA8B,CAAC,KACjF,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,8BAA8B,CAAC;;AAE5D,SAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,SAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;;AAExC,SAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC;;AAE3E,QAAM,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;AAC9D,OAAI,MAAM,KAAK,CAAC,IAAI,OAAO,EAAE;AAC5B,UAAM,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACzC,WAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC9B,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,MAAM,IAAI,MAAM,KAAK,CAAC,IAAI,OAAO,EAAE;AACnC,WAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD;GACD,CAAC,CAAC;EAGH;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,YAAW;AACrC,QAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;AACnC,QAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;CACxE,CAAC,CAAC;;AAEH,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;;AAExB,SAAQ,EAAE,YAAW;AACpB,SAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC/E,SAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;EACtC;CACD,CAAC,CAAC","file":"/client/templates/groups/add_user.js.map","sourcesContent":["Template.addUser.events({\n\t'submit .add-user': function(e) { \n\t\te.preventDefault();\n\t\tvar newUser = $(\"#userName\").val();\n\t\te.stopPropagation();\n\t\tvar inGroup = Groups.findOne({_id: this._id, people: {$in: [newUser]}}) == null;\n\t\tvar groupId = this._id;\n\n\t\tvar message = \"\";\n\t\tvar length = newUser.length > 0;\n\t\tconsole.log(\"The user being added: \" + newUser);\n\t\tconsole.log(\"The current user: \" + Meteor.user().username);\n\t\tvar check = (newUser === Meteor.user().username);\n\t\tconsole.log(\"The current user is the user being added, true or false: \" + check);\n\t\tif (!length) message = \"Please fill in an user\";\n\t\telse if (newUser === Meteor.user().username) message = \"You are already in the group\";\n\t\telse if (!inGroup) message = \"User is already in the group\";\n\n\t\tconsole.log(\"Setting session\");\n\t\tSession.set('addUserMessages', message);\n\n\t\tconsole.log(\"Session is set to: \" + Session.get('addUserMessages') + \" .\");\n\n\t\tMeteor.call('doesUserExist', newUser, function (error, result) {\n\t\t\tif (result === 1 && inGroup) {\n\t\t\t\tMeteor.call('addUser', newUser, groupId);\n\t\t\t\tconsole.log(\"New user added\");\n\t\t\t\tconsole.log(Groups.find().fetch());\n\t\t\t} else if (result === 0 && lengths) {\n\t\t\t\tSession.set('addUserMessages', \"User does not exist\");\n\t\t\t}\n\t\t});\n\n\t\t\n\t}\n});\n\nTemplate.addUser.onCreated(function() {\n\tSession.set('addUserMessages', \"\");\n\tconsole.log(\"On created, session is \" + Session.get('addUserMessages'));\n});\n\nTemplate.addUser.helpers({\n\n\tamessage: function() {\n\t\tconsole.log(\"In message helper, session is \" + Session.get('addUserMessages'));\n\t\treturn Session.get('addUserMessages');\n\t}\n});"]},"hash":"f533612c02f4500b979996c3df3846c841483c46"}
