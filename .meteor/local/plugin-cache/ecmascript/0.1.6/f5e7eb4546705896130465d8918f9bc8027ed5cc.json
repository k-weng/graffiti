{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"// if (Messages.find().count() == 0){\n// \tMessages.insert({name: \"chris\",\n// \ttext: \"test\",\n// \t});\n// }\nif (Groups.find().count() == 0) {\n\tGroups.insert({ name: \"PublicGroup\", people: [] });\n\tGroups.insert({ name: \"SecondGroup\", people: [] });\n}\n\nMeteor.methods({\n\tdoesUserExist: function (userName) {\n\t\tconsole.log(Meteor.users.find().fetch());\n\t\tconsole.log(Meteor.users.find({ username: userName }).count());\n\t\tconsole.log(userName);\n\t\treturn Meteor.users.find({ username: userName }).count();\n\t}\n});\n// if (Messages.find().count() == 0){\n// \tvar message = {\n// \t\t\ttext: \"root\",\n// \t\t\ttimestamp: Date.now(),\n// \t\t\tgroupName: \"PublicGroup\",\n// \t\t\ttransparency: 1\n// \t};\n// \tMessages.insert(message);\n// }\n//an attempt to change opacity dynamically\n// var maxLife = 30000;\n// var interval = 5000;\n// Meteor.setInterval(function(){\n// \tMessages.updateMany({\n// \t\t{},\n// \t\t{\n// \t\t\t$set:{life: 1}\n// \t\t}\n// \t});\n// \t// var timeNow = Date.now()\n// \t// var msgs = Messages.find().map(function(u){\n// \t// \treturn Math.round(maxLife - ((timeNow - u.timestamp)/1000));\n// \t// });\n// \t// console.log(msgs);\n// \t// Messages.update({},{life:msgs});\n// \t// Messages.update({},{$set:{life: maxLife - ((timeNow - timestamp)/1000)}},{multi:true});\n// }, interval);","ast":null,"map":{"version":3,"sources":["/server/serverSide.js"],"names":[],"mappings":";;;;;AAKA,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,EAAC;AAC9B,OAAM,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;AACjD,OAAM,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;CACjD;;AAED,MAAM,CAAC,OAAO,CAAC;AACd,cAAa,EAAE,UAAU,QAAQ,EAAE;AAClC,SAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AACzC,SAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAC7D,SAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,SAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;EACvD;CACD,CAAC,CAAC","file":"/server/serverSide.js.map","sourcesContent":["// if (Messages.find().count() == 0){\n// \tMessages.insert({name: \"chris\",\n// \ttext: \"test\",\n// \t});\n// }\nif (Groups.find().count() == 0){\n\tGroups.insert({name: \"PublicGroup\", people: []});\n\tGroups.insert({name: \"SecondGroup\", people: []});\n}\n\nMeteor.methods({\n\tdoesUserExist: function (userName) {\n\t\tconsole.log(Meteor.users.find().fetch());\n\t\tconsole.log(Meteor.users.find({username: userName}).count());\n\t\tconsole.log(userName);\n\t\treturn Meteor.users.find({username: userName}).count();\n\t}\n});\n// if (Messages.find().count() == 0){\n// \tvar message = {\n// \t\t\ttext: \"root\",\n// \t\t\ttimestamp: Date.now(),\n// \t\t\tgroupName: \"PublicGroup\",\n// \t\t\ttransparency: 1\n// \t}; \n// \tMessages.insert(message);\n// }\n//an attempt to change opacity dynamically\n// var maxLife = 30000;\n// var interval = 5000;\n// Meteor.setInterval(function(){\n// \tMessages.updateMany({\n// \t\t{},\n// \t\t{\n// \t\t\t$set:{life: 1}\n// \t\t}\n// \t});\n// \t// var timeNow = Date.now()\n// \t// var msgs = Messages.find().map(function(u){\n// \t// \treturn Math.round(maxLife - ((timeNow - u.timestamp)/1000));\n// \t// });\n// \t// console.log(msgs);\n// \t// Messages.update({},{life:msgs});\n// \t// Messages.update({},{$set:{life: maxLife - ((timeNow - timestamp)/1000)}},{multi:true});\n// }, interval);\n"]},"hash":"f5e7eb4546705896130465d8918f9bc8027ed5cc"}
