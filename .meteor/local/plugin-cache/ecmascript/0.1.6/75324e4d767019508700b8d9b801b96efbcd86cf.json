{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"Groups = new Mongo.Collection('groups');\n\nGroups.allow({\n\tinsert: function (userId, doc) {\n\t\treturn !!userId;\n\t}\n});\n\nMeteor.methods({\n\taddUser: function (newUser, specificGroup) {\n\t\t// var errors = validatePost(newUser);\n\t\t// if (errors.user) throw new Meteor.Error('invalid-user', \"You must provide a valid username\");\n\t\tGroups.update({ _id: specificGroup }, { $push: { people: newUser } });\n\t\t//console.log(currentGroup);\n\t},\n\tdeleteGroup: function (specificGroup) {\n\t\t//Router.go('/');\n\t\tconsole.log(specificGroup);\n\t\tGroups.remove(specificGroup);\n\t},\n\tquitGroup: function (specificGroup) {\n\t\tconsole.log(specificGroup);\n\t\tGroups.update({ _id: specificGroup }, { $pull: { people: Meteor.user().username } });\n\t}\n});","ast":null,"map":{"version":3,"sources":["/lib/collections/groups.js"],"names":[],"mappings":"AAAA,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;;AAExC,MAAM,CAAC,KAAK,CAAC;AACZ,OAAM,EAAE,UAAS,MAAM,EAAE,GAAG,EAAC;AAC5B,SAAO,CAAC,CAAE,MAAM,CAAC;EACjB;CACD,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC;AACd,QAAO,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE;;;AAG1C,QAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,aAAa,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,EAAC,CAAC,CAAC;;EAEhE;AACD,YAAW,EAAE,UAAU,aAAa,EAAE;;AAErC,SAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,QAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;EAC7B;AACD,UAAS,EAAE,UAAU,aAAa,EAAE;AACnC,SAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,QAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,aAAa,EAAC,EAAE,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAC,EAAC,CAAC,CAAC;EAC/E;CACD,CAAC,CAAC","file":"/lib/collections/groups.js.map","sourcesContent":["Groups = new Mongo.Collection('groups');\n\nGroups.allow({\n\tinsert: function(userId, doc){\n\t\treturn !! userId;\n\t}\n});\n\nMeteor.methods({\n\taddUser: function (newUser, specificGroup) {\n\t\t// var errors = validatePost(newUser);\n\t\t// if (errors.user) throw new Meteor.Error('invalid-user', \"You must provide a valid username\");\n\t\tGroups.update({_id: specificGroup}, {$push: {people: newUser}});\n\t\t\t\t//console.log(currentGroup);\n\t},\n\tdeleteGroup: function (specificGroup) {\n\t\t//Router.go('/');\n\t\tconsole.log(specificGroup);\n\t\tGroups.remove(specificGroup);\n\t},\n\tquitGroup: function (specificGroup) {\n\t\tconsole.log(specificGroup);\n\t\tGroups.update({_id: specificGroup}, {$pull: {people: Meteor.user().username}});\n\t}\n});\n\n"]},"hash":"75324e4d767019508700b8d9b801b96efbcd86cf"}
