{"version":3,"sources":["meteor://ðŸ’»app/server/publications.js"],"names":[],"mappings":";;;;;;;;;;;;;AAKA,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAW;AACnC,QAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACvB,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,UAAS,MAAM,EAAC;AAC5C,QAAO,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC,CAAC;CACtC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,KAAK,EAAE;AAC3C,QAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;;;;;;;;;AAS1C,SAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;;AAEvC,MAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACrB,MAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,EAAC,GAAG,EAAC,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,OAAO,CAAC;AACzD,MAAI,MAAM,GAAG,OAAO,GAAG,CAAC,CAAC;AACzB,SAAO,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7B,UAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAC,IAAI,CAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC;EACxG,CAAC,CAAC;;AAEH,SAAQ,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,EAAC,GAAG,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;;AAElC,QAAO,QAAQ,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,GAAG,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;CACzD,CAAC,CAAC","file":"/server/publications.js","sourcesContent":["// Meteor.publish('groups',function(sortby,order){\n// \tconsole.log(sortby,order);\n// \treturn Groups.find({},{sort:{sortby:order}});\n// });\n\nMeteor.publish('groups', function() {\n\treturn Groups.find({});\n});\n\nMeteor.publish('myMessages', function(userId){\n\treturn Messages.find({userId:userId});\n});\n\nMeteor.publish('messages', function (group) {\n\tconsole.log(\"publications **** \" + group);\n\n\t// Messages.aggregate(\n\t// [{$project:\n\t// \t{\n\t// \t\tlife:{$add: [\"$life\", [{ $multiply: [\"$votes\", (-15)*(60)*(1000)]} ] ]}\n\t// \t}\n\t// }\n\t// ]);\n\tMessages.find().forEach(function (data) {\n\t\t// console.log(maxLife - (Date.now()-data.timestamp));\n\t\tvar now = Date.now();\n\t\tvar maxLife = Groups.findOne({_id:data.groupId}).msgTime;\n\t\tvar weight = maxLife / 2;\n\t\tconsole.log(maxLife, weight);\n\t\tMessages.update({_id:data._id}, {$set: {life: maxLife - (now - data.timestamp) + weight * data.votes}});\n\t});\n\n\tMessages.remove({life: {$lt: 0}});\n\n\treturn Messages.find({groupId: group}, {life: {$gt: 0}});\n});\n\n//Meteor.publish(\"allUsers\", function () {\n//  return Meteor.users.find({});\n//});\n"]}